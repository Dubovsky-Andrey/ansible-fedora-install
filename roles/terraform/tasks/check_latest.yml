# Query HashiCorp Checkpoint API and decide what to do
- name: Get latest Terraform release
  uri:
    url: https://checkpoint-api.hashicorp.com/v1/check/terraform
    return_content: yes
  register: checkpoint
  retries: 4
  delay: 3
  until: checkpoint is succeeded
  changed_when: false

- name: Set fact with latest version
  set_fact:
    terraform_latest: "{{ checkpoint.json.current_version }}"

- name: Detect if Terraform already installed
  command: terraform version -json
  register: tf_installed
  changed_when: false
  failed_when: false # ok if not installed

- name: Parse installed version (or fallback 0.0.0)
  set_fact:
    terraform_installed: >-
      {{ (tf_installed.stdout | default('{}') | from_json).terraform_version
         if tf_installed.rc == 0 else '0.0.0' }}

- name: Decide required action (install / update / nothing)
  set_fact:
    terraform_action: >-
      {% if terraform_installed == '0.0.0' %}install
      {% elif terraform_latest is version_compare(terraform_installed, '>', strict=True) %}update
      {% else %}skip{% endif %}
  changed_when: false

- name: Show planned action
  debug:
    msg: "Installed: {{ terraform_installed }}, latest: {{ terraform_latest }}, action: {{ terraform_action }}"
  changed_when: false
